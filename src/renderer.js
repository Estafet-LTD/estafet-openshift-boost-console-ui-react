import { ChunkExtractor } from '@loadable/server';
import path from 'path';
import React from 'react';
import { renderToString } from 'react-dom/server';
import { Provider } from 'react-redux';
import { StaticRouter } from 'react-router-dom';
import { ServerStyleSheet, StyleSheetManager } from 'styled-components';

import App from './App';
import configureStore from './store';

const assets = require(process.env.RAZZLE_ASSETS_MANIFEST);
const store = configureStore();
const sheet = new ServerStyleSheet();

const isProduction = process.env.NODE_ENV === 'production';

// This is the stats file generated by webpack loadable plugin
const statsFile = path.resolve('build/loadable-stats.json');
// We create an extractor from the statsFile
const extractor = new ChunkExtractor({ statsFile });

// TODO: Clean up and split up all the different logic handling styled-components, variables set on window object, etc
export default (req, res) => {
  const jsx = extractor.collectChunks(
    <StaticRouter context={{}} location={req.url}>
      <Provider store={store}>
        <StyleSheetManager sheet={sheet.instance}>
          <App />
        </StyleSheetManager>
      </Provider>
    </StaticRouter>
  );

  const markup = renderToString(jsx);

  // You can now collect your script tags
  const scriptTags = extractor.getScriptTags();
  console.log(scriptTags);
  // You can also collect your "preload/prefetch" links
  // const linkTags = extractor.getLinkTags() // or extractor.getLinkElements();
  // And you can even collect your style tags (if you use "mini-css-extract-plugin")
  // const styleTags = extractor.getStyleTags() // or extractor.getStyleElements();

  const styleTags = sheet.getStyleTags();

  res.status(200).send(
    `<!doctype html>
    <html lang="">
      <head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta charset="utf-8" />
        <title>Estafet Boost</title>
        <meta name="theme-color" content="#2BA2B8" />
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
        ${styleTags}
        ${
          isProduction
            ? `<script src="${assets.client.js}" defer></script>`
            : `<script src="${assets.client.js}" defer crossorigin></script>`
        }
      </head>
      <body>
        <div id="root">${markup}</div>
        <script>
          window.__PRELOADED_STATE__ = ${JSON.stringify(store.getState())};
          window.boost = ${JSON.stringify({
            BUILD_API_SERVICE_URI: process.env.BUILD_API_SERVICE_URI,
            TEST_API_SERVICE_URI: process.env.TEST_API_SERVICE_URI,
            PROD_API_SERVICE_URI: process.env.PROD_API_SERVICE_URI,
          })};
        </script>
      </body>
    </html>`
  );
};
